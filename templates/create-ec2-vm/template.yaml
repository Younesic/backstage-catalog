apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: virtualmachine
  title: VirtualMachine
  description: >-
    Crée un claim Crossplane VirtualMachine (platform.example.org/v1alpha1)
    et injecte automatiquement l'annotation terasky.backstage.io/owner afin que
    le plugin Kubernetes Ingestor attribue le bon propriétaire au composant.
spec:
  owner: group:infra       # propriétaire du TEMPLATE lui‑même
  type: service

  ############################################################
  # 1. FORM PARAMETERS
  ############################################################
  parameters:
    - title: Resource Metadata
      required: [xrName, xrNamespace, owner]
      properties:
        xrName:
          title: Name
          description: Nom DNS‑1123 pour le VirtualMachine claim
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
          maxLength: 63
        xrNamespace:
          title: Namespace
          description: Namespace cible (default si vide)
          type: string
          pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
          maxLength: 63
          default: default
        owner:
          title: Groupe propriétaire (Backstage)
          type: string
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: [Group]

    - title: Resource Spec
      required: [parameters]
      properties:
        parameters:
          title: Parameters
          type: object
          required: [size]
          properties:
            size:
              title: Instance size
              enum: [nano, micro, small, medium, large]
              type: string

    - title: Crossplane Settings
      properties:
        compositionSelectionStrategy:
          title: Composition Selection Strategy
          type: string
          enum: [runtime, direct-reference, label-selector]
          default: runtime
        compositionRef:
          title: Composition Reference (strategie direct-reference)
          type: object
          properties:
            name:
              title: Composition name
              type: string
              enum: [vm-aws-micro, vm-aws-nano]
        compositionSelector:
          title: Composition Selector (strategie label-selector)
          type: object
          properties:
            matchLabels:
              title: Match Labels
              type: object
              additionalProperties:
                type: string

    - title: Creation Settings
      properties:
        pushToGit:
          title: Push manifest to GitOps repository
          type: boolean
          default: true
        repoUrl:
          title: Repository URL (github.com?owner=<ORG>&repo=<REPO>)
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts: [github.com, gitlab.com]
        targetBranch:
          title: Target branch
          type: string
          default: main
        manifestLayout:
          title: Manifest layout
          type: string
          enum: [cluster-scoped, namespace-scoped, custom]
          default: cluster-scoped
        clusters:
          title: Target clusters (if cluster-scoped)
          type: array
          items:
            type: string
            enum: [microk8s-cluster]
          ui:widget: checkboxes
        basePath:
          title: Base path (if custom layout)
          type: string

  ############################################################
  # 2. WORKFLOW STEPS
  ############################################################
  steps:
    # 2.1 Generate the claim manifest (annotation owner incluse)
    - id: generate
      name: Generate claim YAML
      action: terasky:claim-template
      input:
        apiVersion: platform.example.org/v1alpha1
        kind: VirtualMachine
        nameParam: xrName
        namespaceParam: xrNamespace
        parameters: ${{ parameters }}
        excludeParams: [owner,pushToGit,repoUrl,targetBranch,manifestLayout,clusters,basePath]
        clusters: [microk8s-cluster]
        fileName: vm-claim.yaml
        metadata:
          annotations:
            terasky.backstage.io/owner: ${{ parameters.owner }}

    # 2.2 Publish to existing repository (via Pull-Request) or offer direct download
    - id: publish-pr
      if: ${{ parameters.pushToGit }}
      name: Open PR in existing repo
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}            # must point to an EXISTING repo
        branchName: vm-${{ parameters.xrName }}
        title: "feat: add VirtualMachine ${{ parameters.xrName }}"
        description: |
          Scaffolder-generated manifest for Crossplane VirtualMachine **${{ parameters.xrName }}**.
        sourcePath: ${{ steps.generate.output.targetPath }}
        targetPath: ${{ parameters.basePath }}        # e.g. prod/virtual-machines
        targetBranch: ${{ parameters.targetBranch }}  # usually main

    - id: publish-file
      if: ${{ !parameters.pushToGit }}
      name: Provide manifest download
      action: publish:file
      input:
        path: ${{ steps.generate.output.targetPath }}